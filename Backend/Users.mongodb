// Select the database to use.
use('ChapelEatsDB');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
db.users.drop();

// Insert a few documents into the users collection.
db.users.insertMany([
  { 'name': 'Alice', 'email': 'alice@example.com', 'password': 'password123', 
    'preferences':{ 
        'nutritionalGoals': 'weight_loss',
        'dietaryRestrictions': 'vegan',
        'sex': 'female',
        'mealtime': 'lunch',
        'diningHall': 'hall1',
        'age': 21,
        'height': 65,
        'weight': 130
        
    }},

  { 'name': 'Bob', 'email': 'bob@example.com', 'password': 'password456',
  'preferences': {
      'nutritionalGoals': 'muscle_gain',
      'dietaryRestrictions': 'none',
      'sex': 'male',
      'mealTime': 'dinner',
      'diningHall': 'hall2',
      'age': 30,
      'height': 70,
      'weight': 180
    } },
  { 'name': 'Charlie', 'email': 'charlie@example.com', 'password': 'password789',
  'preferences': {
      'nutritionalGoals': 'maintenance',
      'dietaryRestrictions': 'vegetarian',
      'sex': 'male',
      'mealTime': 'breakfast',
      'diningHall': 'hall1',
      'age': 28,
      'height': 68,
      'weight': 150
    } },
]);

// Run a find command to view all users.
db.users.find({});

// Run a find command to view a user by email.
db.users.find({ email: 'alice@example.com' });

// Build an aggregation to view the total number of users.
const aggregation = [
  { $group: { _id: null, totalUsers: { $sum: 1 } } }
];

// Run the aggregation and open a cursor to the results.
db.users.aggregate(aggregation).toArray();
